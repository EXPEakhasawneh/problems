{"version":3,"sources":["../../src/problem3/prob3.test.js"],"names":["fibonacciArray","fibonacci","test","expect","toBe","toEqual"],"mappings":"AAAA,OAAOA,cAAP,IAAyBC,SAAzB,QAA0C,SAA1C;;AAEAC,KAAK,gDAAL,EAAuD,MAAM;AAC3DC,SAAOF,UAAU,CAAV,CAAP,EAAqBG,IAArB,CAA0B,CAA1B;AACD,CAFD;;AAIAF,KAAK,kBAAL,EAAyB,MAAM;AAC7BC,SAAOF,UAAU,EAAV,CAAP,EAAsBG,IAAtB,CAA2B,EAA3B;AACD,CAFD;;AAIAF,KAAK,mCAAL,EAA0C,MAAM;AAC9CC,SAAOH,eAAe,EAAf,CAAP,EAA2BK,OAA3B,CAAmC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,EAAtB,EAA0B,EAA1B,EAA8B,EAA9B,EAAkC,EAAlC,CAAnC;AACD,CAFD","file":"prob3.test.js","sourcesContent":["import fibonacciArray, { fibonacci } from './prob3';\n\ntest('fibonacci method with first two numbers 0 or 1', () => {\n  expect(fibonacci(1)).toBe(1);\n});\n\ntest('fibonacci method', () => {\n  expect(fibonacci(10)).toBe(55);\n});\n\ntest('fibonacciArray of first 10 number', () => {\n  expect(fibonacciArray(10)).toEqual([0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55]);\n});\n"]}