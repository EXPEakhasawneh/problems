{"version":3,"sources":["../../src/problem3/prob3.js"],"names":["result","fibonacci","number","fibonacciArray","num","i","Object","values"],"mappings":"AAAA,MAAMA,SAAS;AACb,KAAG,CADU;AAEb,KAAG;AAFU,CAAf;;AAKA,OAAO,SAASC,SAAT,CAAmBC,MAAnB,EAA2B;AAChC,MAAIF,OAAOE,MAAP,CAAJ,EAAoB;AAClB,WAAOF,OAAOE,MAAP,CAAP;AACD;AACD,SAAOA,WAAW,CAAX,IAAgBA,WAAW,CAA3B,GAA+BA,MAA/B,GAAwCD,UAAUC,SAAS,CAAnB,IAAwBD,UAAUC,SAAS,CAAnB,CAAvE;AACD;;AAED,eAAe,SAASC,cAAT,CAAwBC,GAAxB,EAA6B;AAC1C,OAAK,IAAIC,IAAI,CAAb,EAAgBA,KAAKD,GAArB,EAA0BC,KAAK,CAA/B,EAAkC;AAChC,QAAI,CAACL,OAAOK,CAAP,CAAL,EAAgB;AACdL,aAAOK,CAAP,IAAYJ,UAAUI,CAAV,CAAZ;AACD;AACF;AACD,SAAOC,OAAOC,MAAP,CAAcP,MAAd,CAAP;AACD;;AAED","file":"prob3.js","sourcesContent":["const result = {\n  0: 0,\n  1: 1,\n};\n\nexport function fibonacci(number) {\n  if (result[number]) {\n    return result[number];\n  }\n  return number === 0 || number === 1 ? number : fibonacci(number - 1) + fibonacci(number - 2);\n}\n\nexport default function fibonacciArray(num) {\n  for (let i = 2; i <= num; i += 1) {\n    if (!result[i]) {\n      result[i] = fibonacci(i);\n    }\n  }\n  return Object.values(result);\n}\n\n// console.log(fibonacciArray(100));\n"]}